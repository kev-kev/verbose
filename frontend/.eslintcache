[{"/Users/kevin/development/verbose/frontend/src/App.js":"1","/Users/kevin/development/verbose/frontend/src/reportWebVitals.js":"2","/Users/kevin/development/verbose/frontend/src/Components/EditWordForm.js":"3","/Users/kevin/development/verbose/frontend/src/Components/NewWordForm.js":"4","/Users/kevin/development/verbose/frontend/src/Components/Home.js":"5","/Users/kevin/development/verbose/frontend/src/Components/WordDisplay.js":"6","/Users/kevin/development/verbose/frontend/src/Components/Navbar.js":"7","/Users/kevin/development/verbose/frontend/src/index.js":"8","/Users/kevin/development/verbose/frontend/src/Context/GlobalContext.js":"9","/Users/kevin/development/verbose/frontend/src/Context/AppReducer.js":"10","/Users/kevin/development/verbose/frontend/src/Components/EntryForm.js":"11","/Users/kevin/development/verbose/frontend/src/Components/EntryIndex.js":"12"},{"size":514,"mtime":1614628662483,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611682961063,"results":"15","hashOfConfig":"14"},{"size":212,"mtime":1611685743784,"results":"16","hashOfConfig":"14"},{"size":970,"mtime":1614638042956,"results":"17","hashOfConfig":"14"},{"size":1731,"mtime":1614638242592,"results":"18","hashOfConfig":"14"},{"size":211,"mtime":1611786211909,"results":"19","hashOfConfig":"14"},{"size":390,"mtime":1611786492420,"results":"20","hashOfConfig":"14"},{"size":649,"mtime":1613857576115,"results":"21","hashOfConfig":"14"},{"size":3865,"mtime":1614695103627,"results":"22","hashOfConfig":"14"},{"size":2812,"mtime":1614637616267,"results":"23","hashOfConfig":"14"},{"size":1340,"mtime":1614289293742,"results":"24","hashOfConfig":"14"},{"size":1724,"mtime":1614695998947,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19o6ze5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevin/development/verbose/frontend/src/App.js",["55"],"/Users/kevin/development/verbose/frontend/src/reportWebVitals.js",[],["56","57"],"/Users/kevin/development/verbose/frontend/src/Components/EditWordForm.js",[],"/Users/kevin/development/verbose/frontend/src/Components/NewWordForm.js",["58","59","60"],"import React, { useContext, useState, } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalContext\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst NewWordForm = () => {\n  const { getDictionaryDefinitions, entries, addWordFailure } = useContext(GlobalContext);\n\n  const [word, setWord] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    let i = false;\n    e.preventDefault();\n    entries.map(entry => {\n      if (entry.word == word){\n        i = true;\n      }\n    })\n    if (i == true){\n      addWordFailure(word)\n    } else {\n      getDictionaryDefinitions(word);\n    }\n  };\n\n  return (\n    <Form id=\"newWordForm\" inline className=\"mb-4\">\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter a word\"\n        className=\"mr-2\"\n        onChange={(e) => setWord(e.target.value)}\n      />\n      <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default NewWordForm;\n","/Users/kevin/development/verbose/frontend/src/Components/Home.js",["61","62"],"/Users/kevin/development/verbose/frontend/src/Components/WordDisplay.js",[],"/Users/kevin/development/verbose/frontend/src/Components/Navbar.js",["63"],"import React from 'react'\nimport logo from '../Assets/logo.png'\n\nexport default function Navbar() {\n  return (\n    <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">\n        <img src={logo} alt=\"\" width=\"30\" height=\"30\" class=\"d-inline-block align-bottom\" />\n          Verbose\n        </a>\n      </div>\n    </nav>\n  )\n}\n","/Users/kevin/development/verbose/frontend/src/index.js",[],["64","65"],"/Users/kevin/development/verbose/frontend/src/Context/GlobalContext.js",[],"/Users/kevin/development/verbose/frontend/src/Context/AppReducer.js",["66"],"export default (state, action) => {\n  switch (action.type) {\n    case \"SUBMITTING_ENTRY\":\n      return {\n        ...state,\n        isSubmittingEntry: true,\n      };\n    case \"SUBMIT_ENTRY_SUCCESS\":\n      return {\n        ...state,\n        entries: action.payload,\n        isSubmittingEntry: false,\n      };\n    case \"SUBMIT_ENTRY_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          submit: action.payload,\n        },\n        isSubmittingEntry: false,\n      };\n    case \"FETCHING_ENTRIES\":\n      return {\n        ...state,\n        isFetchingEntries: true,\n      };\n    case \"FETCH_ENTRIES_SUCCESS\":\n      return {\n        ...state,\n        entries: action.payload,\n        isFetchingEntries: false,\n      };\n    case \"FETCH_ENTRIES_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          entryIndex: action.payload,\n        },\n        isFetchingEntries: false,\n      };\n    case \"SET_CURRENT_WORD\":\n      return {\n        ...state,\n        currentWord: action.payload,\n      };\n    case \"FETCHING_DEFINITIONS\":\n      return {\n        ...state,\n        dictionaryDefinitions: null,\n        isFetchingDefinitions: true,\n      };\n    case \"FETCH_DEFINITIONS_SUCCESS\":\n      return {\n        ...state,\n        dictionaryDefinitions: action.payload,\n        isFetchingDefinitions: false,\n      };\n    case \"FETCH_DEFINITIONS_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          fetchDefinitions: action.payload,\n        },\n        isFetchingDefinitions: false,\n      };\n    case \"CLEAR_DEFINITIONS\":\n      return {\n        ...state,\n        dictionaryDefinitions: null,\n      };\n    case \"STARRED_UPDATE_SUCCESS\":\n      return {\n        ...state,\n        entries: action.payload,\n      };\n    case \"STARRED_UPDATE_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          entryIndex: action.payload,\n        },\n      };\n    case \"DELETE_ENTRY_SUCCESS\":\n      return {\n        ...state,\n        entries: action.payload,\n      };\n    case \"DELETE_ENTRY_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          entryIndex: action.payload,\n        },\n      };\n    case \"ADD_WORD_FAILURE\":\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          addWord: `${action.payload} has already been added.`,\n        },\n      };\n    case \"CLEAR_CURRENT_WORD\":\n      return {\n        ...state,\n        dictionaryDefinitions: [],\n        currentWord: null,\n      };\n    case \"CLEAR_ERRORS\":\n      return {\n        ...state,\n        errors: {\n          fetchDefinitions: null,\n          submit: null,\n          entryIndex: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","/Users/kevin/development/verbose/frontend/src/Components/EntryForm.js",[],"/Users/kevin/development/verbose/frontend/src/Components/EntryIndex.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"67","line":15,"column":26},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":13,"column":23,"nodeType":"74","messageId":"75","endLine":13,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":14,"column":22,"nodeType":"78","messageId":"79","endLine":14,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":18,"column":11,"nodeType":"78","messageId":"79","endLine":18,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":26,"column":3,"nodeType":"82","endLine":26,"endColumn":12,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":60,"column":7,"nodeType":"86","endLine":60,"endColumn":78},{"ruleId":"87","severity":1,"message":"88","line":8,"column":9,"nodeType":"86","endLine":8,"endColumn":42},{"ruleId":"68","replacedBy":"89"},{"ruleId":"70","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":1,"nodeType":"93","endLine":126,"endColumn":3},"Parsing error: Unterminated regular expression\n\n  13 |           <Route path=\"/\" exact component={Home} />\n  14 |         </Router> */}\n> 15 |         <Home className=/> \n     |                          ^\n  16 |       </GlobalProvider>\n  17 |     );\n  18 |   }","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","Identifier",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["94"],["95"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [getEntries]",{"range":"99","text":"100"},[738,740],"[getEntries]"]