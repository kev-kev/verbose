[{"/Users/kevin/development/verbose/frontend/src/App.js":"1","/Users/kevin/development/verbose/frontend/src/reportWebVitals.js":"2","/Users/kevin/development/verbose/frontend/src/Components/NewWordForm.js":"3","/Users/kevin/development/verbose/frontend/src/Components/Home.js":"4","/Users/kevin/development/verbose/frontend/src/index.js":"5","/Users/kevin/development/verbose/frontend/src/Context/GlobalContext.js":"6","/Users/kevin/development/verbose/frontend/src/Context/AppReducer.js":"7","/Users/kevin/development/verbose/frontend/src/Components/EntryForm.js":"8","/Users/kevin/development/verbose/frontend/src/Components/EntryIndex.js":"9","/Users/kevin/development/verbose/frontend/src/Components/EditModal.js":"10","/Users/kevin/development/verbose/frontend/src/Components/DefinitionSelector.js":"11"},{"size":504,"mtime":1614628665290,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611682961063,"results":"14","hashOfConfig":"13"},{"size":1016,"mtime":1614892566913,"results":"15","hashOfConfig":"13"},{"size":2101,"mtime":1614973985438,"results":"16","hashOfConfig":"13"},{"size":649,"mtime":1613857576115,"results":"17","hashOfConfig":"13"},{"size":4786,"mtime":1614973376775,"results":"18","hashOfConfig":"13"},{"size":2855,"mtime":1614973237331,"results":"19","hashOfConfig":"13"},{"size":1439,"mtime":1614973758111,"results":"20","hashOfConfig":"13"},{"size":2052,"mtime":1614890403286,"results":"21","hashOfConfig":"13"},{"size":1419,"mtime":1614890461569,"results":"22","hashOfConfig":"13"},{"size":1227,"mtime":1614973685274,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"19o6ze5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevin/development/verbose/frontend/src/App.js",["51","52"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { GlobalProvider } from \"./Context/GlobalContext\";\n\nimport Home from \"./Components/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <GlobalProvider>\n        {/* <Router>\n          <Route path=\"/\" exact component={Home} />\n        </Router> */}\n        <Home /> \n      </GlobalProvider>\n    );\n  }\n}\n\nexport default App;\n",["53","54"],"/Users/kevin/development/verbose/frontend/src/reportWebVitals.js",[],["55","56"],"/Users/kevin/development/verbose/frontend/src/Components/NewWordForm.js",["57","58"],"/Users/kevin/development/verbose/frontend/src/Components/Home.js",["59","60"],"/Users/kevin/development/verbose/frontend/src/index.js",[],["61","62"],"/Users/kevin/development/verbose/frontend/src/Context/GlobalContext.js",[],"/Users/kevin/development/verbose/frontend/src/Context/AppReducer.js",["63"],"/Users/kevin/development/verbose/frontend/src/Components/EntryForm.js",[],"/Users/kevin/development/verbose/frontend/src/Components/EntryIndex.js",["64"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalContext\";\nimport { Accordion, Card, Button, Modal } from \"react-bootstrap\";\nimport EditModal from \"./EditModal\";\n\nconst EntryIndex = () => {\n  const { entries, deleteEntry, } = useContext(\n    GlobalContext\n  );\n  const [selectedEntry, setSelectedEntry] = useState();\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n  const handleDelete = (word) => {\n    deleteEntry(word);\n  };\n\n  const onEditClick = (entry) => {\n    setSelectedEntry(entry);\n    setEditModalIsOpen(true);\n  };\n\n  const renderEntryCards = (entries) => {\n    if (entries) {\n      let i = 0;\n      return entries.map((entry) => {\n        i++;\n        return (\n          <Card key={i}>\n            <Accordion.Toggle\n              as={Card.Header}\n              eventKey={i}\n              className=\"d-flex justify-content-space-between\"\n            >\n              {entry.word} - {entry.newDefinition}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={i}>\n              <Card.Body>\n                <Card.Text>{entry.dictDefinition}</Card.Text>\n                <Button\n                  onClick={() => onEditClick(entry)}\n                  variant=\"primary\"\n                  className=\"mr-2\"\n                  size=\"sm\"\n                >\n                  Edit\n                </Button>\n                <Button\n                  onClick={() => handleDelete(entry.word)}\n                  variant=\"danger\"\n                  size=\"sm\"\n                >\n                  Delete\n                </Button>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        );\n      });\n    }\n  };\n\n  return (\n    <>\n      {editModalIsOpen && (\n        <EditModal editModalIsOpen={editModalIsOpen} setEditModalIsOpen={setEditModalIsOpen} entry={selectedEntry} />\n      )}\n      <Accordion className=\"mx-3\" style={{ width: 500 }}>\n        {renderEntryCards(entries)}\n      </Accordion>\n    </>\n  );\n};\n\nexport default EntryIndex;\n","/Users/kevin/development/verbose/frontend/src/Components/EditModal.js",[],"/Users/kevin/development/verbose/frontend/src/Components/DefinitionSelector.js",[],{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":2,"column":35,"nodeType":"67","messageId":"68","endLine":2,"endColumn":40},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"65","severity":1,"message":"76","line":1,"column":29,"nodeType":"67","messageId":"68","endLine":1,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":13,"column":25,"nodeType":"79","messageId":"80","endLine":13,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":33,"column":3,"nodeType":"67","endLine":33,"endColumn":12,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":77,"column":7,"nodeType":"86","endLine":77,"endColumn":82},{"ruleId":"70","replacedBy":"87"},{"ruleId":"72","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":1,"nodeType":"91","endLine":130,"endColumn":3},{"ruleId":"65","severity":1,"message":"92","line":3,"column":35,"nodeType":"67","messageId":"68","endLine":3,"endColumn":40},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["93"],["94"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [getEntries]",{"range":"98","text":"99"},[816,818],"[getEntries]"]